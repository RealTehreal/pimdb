# Continuous integration build for pimdb.
name: Build

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    env:
      MAIN_PYTHON_VERSION: "3.12"  # Same as Ubuntu 24 LTS

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ci
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run the test suite with SQLite
        run: |
          python setup.py develop
          pytest --verbose
      - name: Run the test suite with PostgreSQL
        env:
          PIMDB_TEST_DATABASE: "postgresql+psycopg2://postgres:ci@localhost:5432/postgres"
        run: |
          pytest --cov=pimdb --cov=tests --verbose
      - name: Upload test coverage to Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ ${{ matrix.python-version }} == $MAIN_PYTHON_VERSION ]]; then coveralls; fi
      - name: Build and install pimdb package
        run: |
          python setup.py bdist_wheel
          if [[ ${{ matrix.python-version }} == $MAIN_PYTHON_VERSION ]]; then twine check dist/pimdb-*.whl; fi
          pip install dist/pimdb-*.whl
      - name: Build documentation
        run: |
          make -C docs html

  check-style:
    runs-on: ubuntu-latest
    # Disable pre-commit check on main and production to prevent
    # pull request merges to fail with "don't commit to branch".
    if: github.ref != 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Install pre-commit
        run: |
          sudo apt-get install python3
          python -m pip install --upgrade pip
          pip install pre-commit
      - name: Load cached pre-commit
        id: cached-pre-commit
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Install pre-commit hooks
        if: steps.cached-pre-commit.outputs.cache-hit != 'true'
        run: pre-commit install --install-hooks
      - name: Check coding style
        run: pre-commit run --all-files
